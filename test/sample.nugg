<?xml version="1.0" encoding="utf-16"?>
<nugget name="GSK_PCARD_DEV_ELSEND">
 <CLAS CLSNAME="ZCL_PC_NOTIF_GROUP" VERSION="1" LANGU="E" DESCRIPT="PC: Notification Group Customising" UUID="8EE6C9D3A70D1EE687B5990468C89233" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="OJR52122" CREATEDON="20160429" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="740" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <types CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GY_S_TRANSACT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="OJR52122" CREATEDON="20160614" CHANGEDBY="OJR52122" CHANGEDON="20160614" TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="4 " SRCROW2="16 " SRCCOLUMN2="25 " TYPESRC_LENG="288 " TYPESRC="begin of gy_s_transact,

        refno        type zpcref,

        card_no      type zpccardno,

        provider     type zpcproviderid,

        load_date    type zpcloaddate,

        subm_date    type zpcsubmdate,

        notif_status type zpcnotifsid,

      end of gy_s_transact

"/>
  <types CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GY_TS_TRANSACT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="OJR52122" CREATEDON="20160614" CHANGEDBY="OJR52122" CHANGEDON="20160614" TYPTYPE="4" SRCROW1="18 " SRCCOLUMN1="4 " SRCROW2="18 " SRCCOLUMN2="89 " TYPESRC_LENG="88 " TYPESRC="gy_ts_transact type sorted table of gy_s_transact with non-unique key card_no provider

"/>
  <types CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GY_S_CARD_NOTIF" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160614" TYPTYPE="4" SRCROW1="20 " SRCCOLUMN1="4 " SRCROW2="24 " SRCCOLUMN2="27 " TYPESRC_LENG="177 " TYPESRC="begin of gy_s_card_notif,

        provider     type zpcproviderid,

        card_no      type zpccardno,

        notif_status type zpcnotifsid,

      end of gy_s_card_notif

"/>
  <types CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GY_T_CARD_NOTIF" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160614" TYPTYPE="4" SRCROW1="26 " SRCCOLUMN1="4 " SRCROW2="26 " SRCCOLUMN2="88 " TYPESRC_LENG="87 " TYPESRC="gy_t_card_notif type hashed table of gy_s_card_notif with unique key provider card_no

"/>
  <types CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GY_R_STATUS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160614" TYPTYPE="4" SRCROW1="28 " SRCCOLUMN1="4 " SRCROW2="28 " SRCCOLUMN2="40 " TYPESRC_LENG="39 " TYPESRC="gy_r_status type range of zpcstatusid

"/>
  <types CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GY_S_SUBJECT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160614" TYPTYPE="4" SRCROW1="30 " SRCCOLUMN1="4 " SRCROW2="33 " SRCCOLUMN2="24 " TYPESRC_LENG="131 " TYPESRC="begin of gy_s_subject,

        notif_status type zpcnotifsid,

        email_sub    type zpcemailsub,

      end of gy_s_subject

"/>
  <types CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GY_T_SUBJECT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160614" TYPTYPE="4" SRCROW1="35 " SRCCOLUMN1="4 " SRCROW2="35 " SRCCOLUMN2="78 " TYPESRC_LENG="77 " TYPESRC="gy_t_subject type hashed table of gy_s_subject with unique key notif_status

"/>
  <publicSection>class ZCL_PC_NOTIF_GROUP definition
  public
  final
  create public .

public section.

  types:
    begin of gy_s_transact,
        refno        type zpcref,
        card_no      type zpccardno,
        provider     type zpcproviderid,
        load_date    type zpcloaddate,
        subm_date    type zpcsubmdate,
        notif_status type zpcnotifsid,
      end of gy_s_transact .
  types:
    gy_ts_transact type sorted table of gy_s_transact with non-unique key card_no provider .
  types:
    begin of gy_s_card_notif,
        provider     type zpcproviderid,
        card_no      type zpccardno,
        notif_status type zpcnotifsid,
      end of gy_s_card_notif .
  types:
    gy_t_card_notif type hashed table of gy_s_card_notif with unique key provider card_no .
  types:
    gy_r_status type range of zpcstatusid .
  types:
    begin of gy_s_subject,
        notif_status type zpcnotifsid,
        email_sub    type zpcemailsub,
      end of gy_s_subject .
  types:
    gy_t_subject type hashed table of gy_s_subject with unique key notif_status .

  constants GC_RECIPIENT_OWNER type ZPCRECIPIENT value &apos;OWNER&apos; ##NO_TEXT.
  constants GC_RECIPIENT_DELEG type ZPCRECIPIENT value &apos;DELEG&apos; ##NO_TEXT.
  constants GC_RECIPIENT_APRVR type ZPCRECIPIENT value &apos;APRVR&apos; ##NO_TEXT.
  constants GC_RECIPIENT_CODER type ZPCRECIPIENT value &apos;CODER&apos; ##NO_TEXT.
  constants GC_NOTIFGRP_APVR type ZPCNOTIFGRP value &apos;APVR&apos; ##NO_TEXT.
  constants GC_NOTIFGRP_CODR type ZPCNOTIFGRP value &apos;CODR&apos; ##NO_TEXT.
  constants GC_NOTIFGRP_FILE type ZPCNOTIFGRP value &apos;FILE&apos; ##NO_TEXT.
  constants GC_NOTIFGRP_DELG type ZPCNOTIFGRP value &apos;DELG&apos; ##NO_TEXT.
  constants GC_NOTIFGRP_CARD type ZPCNOTIFGRP value &apos;CARD&apos; ##NO_TEXT.
  constants GC_KEY_DATE_CODR type STRING value &apos;LOAD_DATE&apos; ##NO_TEXT.
  constants GC_KEY_DATE_APVR type STRING value &apos;SUBM_DATE&apos; ##NO_TEXT.
  data GV_CUTOFFDATE type DATUM read-only .
  data:
    gt_status_range type range of zpcstatusid read-only .
  data GV_COMPARISON_DATE type STRING read-only .
  constants GC_ZPCNOTIFSTATUS type STRING value &apos;ZPCNOTIFSTATUS&apos; ##NO_TEXT.
  constants GC_ZPCNOTIFSUB type STRING value &apos;ZPCNOTIFSUB&apos; ##NO_TEXT.

  methods CONSTRUCTOR
    importing
      !I_MSG type ref to ZCL_PC_MESSAGES
      !I_T_NOTIF_STATUS type ZPCNOTIFSTATUS_TH optional
      !I_T_SUBJECT type ZCL_PC_NOTIF_GROUP=&gt;GY_T_SUBJECT optional
      !I_T_APPRV_STATUS type ZCL_PC_NOTIF_GROUP=&gt;GY_R_STATUS optional
      !I_COMPARISON_DATE type STRING optional .
  methods GET_EMAIL_ID
    importing
      !I_NOTIF_STATUS type ZPCNOTIFSID default SPACE
    returning
      value(R_EMAILID) type ZPCEMAILID .
  methods GET_EMAIL_SUBJECT
    importing
      !I_NOTIF_STATUS type ZPCNOTIFSID default SPACE
    returning
      value(R_SUBJECT) type ZPCEMAILSUB .
  methods PREPARE_CARD_EMAIL
    importing
      !I_CARD type ZPCCARD
      !I_NOTIF_STATUS type ZPCNOTIFSID default SPACE
    returning
      value(R_EMAIL) type ref to ZCL_PC_EMAIL_API .
  class-methods OBJECT_FOR_GROUP
    importing
      !I_GROUP type ZPCNOTIFGRP
      !I_LOG type ref to ZCL_PC_MESSAGES
      !I_LANGUAGE type SYLANGU default SY-LANGU
    returning
      value(R_GROUP) type ref to ZCL_PC_NOTIF_GROUP .
  class-methods GET_RECIPIENT
    importing
      !I_FIELD type ZPCRECIPIENT
      !I_CARD type ZPCCARD
    returning
      value(R_USER) type ZPCUSER .
  methods GET_AGE
    importing
      !I_TRANSACTION type ZCL_PC_NOTIF_GROUP=&gt;GY_S_TRANSACT
    returning
      value(R_AGE) type ZPCDAYSAGE .
  methods GET_NEXT_STATUS
    importing
      !I_AGE type ZPCDAYSAGE
      !I_CURRENT type ZPCNOTIFSID
    returning
      value(R_NEXT) type ZPCNOTIFSID .
  methods DETERMINE_CARDS_TO_NOTIFY
    importing
      !I_T_TRANSACTION type ZCL_PC_NOTIF_GROUP=&gt;GY_TS_TRANSACT
    exporting
      !E_T_CARD_NOTIF type ZCL_PC_NOTIF_GROUP=&gt;GY_T_CARD_NOTIF .</publicSection>
  <protectedSection>protected section.</protectedSection>
  <privateSection>private section.

  data GT_NOTIF_STATUS type ZPCNOTIFSTATUS_TH .
  data:
    gt_s_notif_status type standard table of zpcnotifstatus .
  data GR_MSG type ref to ZCL_PC_MESSAGES .
  data GT_SUBJECT type GY_T_SUBJECT .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_KEY_DATE_APVR" VERSION="1" LANGU="1" DESCRIPT="Key date for transaction approval" EXPOSURE="2" STATE="1" EDITORDER="11 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="2" ATTVALUE="&apos;SUBM_DATE&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_KEY_DATE_CODR" VERSION="1" LANGU="1" DESCRIPT="Key date for transactions to code" EXPOSURE="2" STATE="1" EDITORDER="10 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="2" ATTVALUE="&apos;LOAD_DATE&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_NOTIFGRP_APVR" VERSION="1" LANGU="1" DESCRIPT="PC: Notification Group" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="2" ATTVALUE="&apos;APVR&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZPCNOTIFGRP" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_NOTIFGRP_CARD" VERSION="1" LANGU="1" DESCRIPT="PC: Notification Group" EXPOSURE="2" STATE="1" EDITORDER="9 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="2" ATTVALUE="&apos;CARD&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZPCNOTIFGRP" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_NOTIFGRP_CODR" VERSION="1" LANGU="1" DESCRIPT="PC: Notification Group" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="2" ATTVALUE="&apos;CODR&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZPCNOTIFGRP" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_NOTIFGRP_DELG" VERSION="1" LANGU="1" DESCRIPT="PC: Notification Group" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="2" ATTVALUE="&apos;DELG&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZPCNOTIFGRP" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_NOTIFGRP_FILE" VERSION="1" LANGU="1" DESCRIPT="PC: Notification Group" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="2" ATTVALUE="&apos;FILE&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZPCNOTIFGRP" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_RECIPIENT_APRVR" VERSION="1" LANGU="1" DESCRIPT="PC: Email Recipient Code" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="2" ATTVALUE="&apos;APRVR&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZPCRECIPIENT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_RECIPIENT_CODER" VERSION="1" LANGU="1" DESCRIPT="PC: Email Recipient Code" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="2" ATTVALUE="&apos;CODER&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZPCRECIPIENT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_RECIPIENT_DELEG" VERSION="1" LANGU="1" DESCRIPT="PC: Email Recipient Code" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="2" ATTVALUE="&apos;DELEG&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZPCRECIPIENT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_RECIPIENT_OWNER" VERSION="1" LANGU="1" DESCRIPT="PC: Email Recipient Code" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="2" ATTVALUE="&apos;OWNER&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZPCRECIPIENT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_ZPCNOTIFSTATUS" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="15 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="SB282791" CHANGEDON="20160526" ATTDECLTYP="2" ATTVALUE="&apos;ZPCNOTIFSTATUS&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GC_ZPCNOTIFSUB" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="16 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="SB282791" CHANGEDON="20160526" ATTDECLTYP="2" ATTVALUE="&apos;ZPCNOTIFSUB&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GR_MSG" VERSION="1" LANGU="1" DESCRIPT="PC: Message logging" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_PC_MESSAGES" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="740" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GT_NOTIF_STATUS" VERSION="1" LANGU="1" DESCRIPT="PC: Hashed table of notification status for group" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZPCNOTIFSTATUS_TH" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="740" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GT_STATUS_RANGE" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="13 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160614" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="50 " SRCCOLUMN1="4 " SRCROW2="50 " SRCCOLUMN2="44 " TYPESRC_LENG="43 " TYPESRC="gt_status_range type range of zpcstatusid

"/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GT_SUBJECT" VERSION="1" LANGU="1" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="GY_T_SUBJECT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="740" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GT_S_NOTIF_STATUS" VERSION="1" LANGU="1" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="5 " SRCCOLUMN1="4 " SRCROW2="5 " SRCCOLUMN2="58 " R3RELEASE="740" TYPESRC_LENG="57 " TYPESRC="gt_s_notif_status type standard table of zpcnotifstatus

"/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GV_COMPARISON_DATE" VERSION="1" LANGU="1" DESCRIPT="Comparison Date Field" EXPOSURE="2" STATE="1" EDITORDER="14 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="SB282791" CHANGEDON="20160526" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GV_CUTOFFDATE" VERSION="1" LANGU="1" DESCRIPT="Date" EXPOSURE="2" STATE="1" EDITORDER="12 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="SB282791" CHANGEDON="20160526" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="DATUM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="CONSTRUCTOR" SCONAME="I_MSG" VERSION="1" LANGU="E" DESCRIPT="PC: Message logging" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_PC_MESSAGES"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="CONSTRUCTOR" SCONAME="I_T_NOTIF_STATUS" VERSION="1" LANGU="E" DESCRIPT="PC: Hashed table of notification status for group" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZPCNOTIFSTATUS_TH" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="CONSTRUCTOR" SCONAME="I_T_SUBJECT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_PC_NOTIF_GROUP=&gt;GY_T_SUBJECT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="CONSTRUCTOR" SCONAME="I_T_APPRV_STATUS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_PC_NOTIF_GROUP=&gt;GY_R_STATUS" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="CONSTRUCTOR" SCONAME="I_COMPARISON_DATE" VERSION="1" LANGU="E" DESCRIPT="Comparison Date Field" CMPTYPE="1" MTDTYPE="2" EDITORDER="5 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <source>method constructor.
********* Basic documentation of ABAP****************************
* Date: 12-JUN-16                                               *
* Programmer: Stuart Bell (SB282791)                            *
* Program Specification: DS [R21] P2P_R_018                     *
* Source Code Review: SCRR [R21] P2P_R_018                      *
*                                                               *
* Transport No. : RBDK951514                                    *
*                                                               *
* Description of ABAP’s function: Construct an object that      *
* represents a notification group. This is one per action to    *
* allow encapsulation of the configuration required for sending *
* emails for a specific purpose.                                *
*                                                               *
* Attributes - N/A                                              *
*****************************************************************

  field-symbols: &lt;lfs_first_notif&gt; type zpcnotifstatus.
*****************************************************************************
* save incoming data
*****************************************************************************
  gr_msg             = i_msg.
  gt_subject         = i_t_subject.
  gt_notif_status    = i_t_notif_status.
  gt_status_range    = i_t_apprv_status.
  gv_comparison_date = i_comparison_date.


*****************************************************************************
* sort so we can iterate through the table to find the next status
*****************************************************************************
  gt_s_notif_status  = gt_notif_status.
  sort gt_s_notif_status by age ascending.


*****************************************************************************
* Get cutoff date (transactions with a refdate newer than cutoff we definitely don&apos;t need to notify for)
*****************************************************************************
  gv_cutoffdate      = sy-datum.
  read table gt_s_notif_status index 1 assigning &lt;lfs_first_notif&gt;. &quot;index provided - BINARY SEARCH not appropriate
  if &lt;lfs_first_notif&gt; is assigned.
    gv_cutoffdate = gv_cutoffdate - &lt;lfs_first_notif&gt;-age.
  endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="DETERMINE_CARDS_TO_NOTIFY" VERSION="1" LANGU="E" DESCRIPT="Determine the cards to generate emails for and what status" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="DETERMINE_CARDS_TO_NOTIFY" SCONAME="I_T_TRANSACTION" VERSION="1" LANGU="E" DESCRIPT="PC: Transaction Header Table Type" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160614" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_PC_NOTIF_GROUP=&gt;GY_TS_TRANSACT"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="DETERMINE_CARDS_TO_NOTIFY" SCONAME="E_T_CARD_NOTIF" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_PC_NOTIF_GROUP=&gt;GY_T_CARD_NOTIF"/>
   <source>method determine_cards_to_notify.
********* Basic documentation of ABAP****************************
* Date: 12-JUN-16                                               *
* Programmer: Stuart Bell (SB282791)                            *
* Program Specification: DS [R21] P2P_R_018                     *
* Source Code Review: SCRR [R21] P2P_R_018                      *
*                                                               *
* Transport No. : RBDK951514                                    *
*                                                               *
* Description of ABAP’s function: Update the given transaction  *
* notification statuses as required and populate a result table *
* of cards for notification. To avoid spamming users, the       *
* notifications will only be sent for the oldest transactions.  *
*                                                               *
* Attributes - N/A                                              *
*****************************************************************

  data: lt_transaction type standard table of zcl_pc_notif_group=&gt;gy_s_transact,
        lwa_card       type zcl_pc_notif_group=&gt;gy_s_card_notif,
        lv_next        type zpcnotifsid.

  clear: e_t_card_notif.

  lt_transaction = i_t_transaction.

* Sort and delete adjacent so that we always have the oldest per card
  sort lt_transaction by provider card_no (gv_comparison_date) ascending.
  delete adjacent duplicates from lt_transaction comparing provider card_no.

* process transactions
  loop at lt_transaction assigning field-symbol(&lt;lfs_transaction&gt;).

*   Get the new notification status. If it is blank we don&apos;t need to change it.
    lv_next = get_next_status( i_current = &lt;lfs_transaction&gt;-notif_status
                               i_age     = get_age( &lt;lfs_transaction&gt; ) ).

    check lv_next is not initial. &quot; doesn&apos;t make sense to move this into a where clause on the loop

*   Add card_no and notif status to table of cards for which to notify
    lwa_card-card_no      = &lt;lfs_transaction&gt;-card_no.
    lwa_card-provider     = &lt;lfs_transaction&gt;-provider.
    lwa_card-notif_status = lv_next.
    insert lwa_card into table e_t_card_notif.

*   Log notification request
    gr_msg-&gt;add( i_num  = 094 &quot;Notification requested for transaction &amp;1, status &amp;2
                 i_type = zcl_pc_messages=&gt;gc_msg_type_i
                 i_v1   = &lt;lfs_transaction&gt;-refno &amp;&amp; &apos;&apos; &quot;Force string data type
                 i_v2   = lv_next ).
    if 1 = 2. message i094(zpc) with &lt;lfs_transaction&gt;-refno lv_next. endif. &quot; enables where-used functionality in SE91
  endloop.

endmethod.</source>
  </method>
  <method CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_AGE" VERSION="1" LANGU="E" DESCRIPT="Return the age of the transaction wrt the group config" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_AGE" SCONAME="I_TRANSACTION" VERSION="1" LANGU="E" DESCRIPT="PC: Transaction Header Table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160614" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_PC_NOTIF_GROUP=&gt;GY_S_TRANSACT"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_AGE" SCONAME="R_AGE" VERSION="1" LANGU="E" DESCRIPT="PC: Age in days" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZPCDAYSAGE"/>
   <source>method get_age.
********* Basic documentation of ABAP****************************
* Date: 12-JUN-16                                               *
* Programmer: Stuart Bell (SB282791)                            *
* Program Specification: DS [R21] P2P_R_018                     *
* Source Code Review: SCRR [R21] P2P_R_018                      *
*                                                               *
* Transport No. : RBDK951514                                    *
*                                                               *
* Description of ABAP’s function: Get the reference date for    *
* transaction age:                                              *
*    if action group is coder                                   *
*        birthdate is transaction file load date                *
*    if action group is approver                                *
*        birthday is transaction submitted date                 *
*                                                               *
* Attributes - N/A                                              *
*****************************************************************

  field-symbols: &lt;lfs_ref_date&gt; type datum.

  clear: r_age.

* Get the reference date for transaction age
*    if action group is coder
*        birthdate is transaction file load date
*    if action group is approver
*        birthday is transaction submitted date
  assign component me-&gt;gv_comparison_date of structure i_transaction to &lt;lfs_ref_date&gt;.

  if &lt;lfs_ref_date&gt; is assigned.
    r_age = sy-datum - &lt;lfs_ref_date&gt;.
  else.
*   Error calculating age of transaction &amp;1
    gr_msg-&gt;add( i_num = 102
                 i_v1  = i_transaction-refno ).
    if 1 = 2. message e102(zpc) with i_transaction-refno. endif. &quot; enables where-used functionality in SE91

  endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_EMAIL_ID" VERSION="1" LANGU="E" DESCRIPT="Get email id based on status" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_EMAIL_ID" SCONAME="I_NOTIF_STATUS" VERSION="1" LANGU="E" DESCRIPT="PC: Notification Status" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZPCNOTIFSID" PARVALUE="SPACE"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_EMAIL_ID" SCONAME="R_EMAILID" VERSION="1" LANGU="E" DESCRIPT="PC: Email Object ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZPCEMAILID"/>
   <source>method get_email_id.
********* Basic documentation of ABAP****************************
* Date: 12-JUN-16                                               *
* Programmer: Stuart Bell (SB282791)                            *
* Program Specification: DS [R21] P2P_R_018                     *
* Source Code Review: SCRR [R21] P2P_R_018                      *
*                                                               *
* Transport No. : RBDK951514                                    *
*                                                               *
* Description of ABAP’s function: Get email id based on card    *
* and notification status.                                      *
*                                                               *
* Attributes - N/A                                              *
*****************************************************************

  field-symbols: &lt;lfs_notif_status&gt; type zpcnotifstatus.

  clear: r_emailid.

  read table me-&gt;gt_notif_status &quot;hashed table - BINARY SEARCH not appropriate
    with table key notif_status = i_notif_status
    assigning &lt;lfs_notif_status&gt;.

  if sy-subrc = 0.
    r_emailid = &lt;lfs_notif_status&gt;-emailid.
  endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_EMAIL_SUBJECT" VERSION="1" LANGU="E" DESCRIPT="Get email subjects based on status" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_EMAIL_SUBJECT" SCONAME="I_NOTIF_STATUS" VERSION="1" LANGU="E" DESCRIPT="PC: Notification Status" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZPCNOTIFSID" PARVALUE="SPACE"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_EMAIL_SUBJECT" SCONAME="R_SUBJECT" VERSION="1" LANGU="E" DESCRIPT="PC: Notification email subject" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZPCEMAILSUB"/>
   <source>method get_email_subject.
********* Basic documentation of ABAP****************************
* Date: 12-JUN-16                                               *
* Programmer: Stuart Bell (SB282791)                            *
* Program Specification: DS [R21] P2P_R_018                     *
* Source Code Review: SCRR [R21] P2P_R_018                      *
*                                                               *
* Transport No. : RBDK951514                                    *
*                                                               *
* Description of ABAP’s function: Get email subjects based on   *
* card and notification status.                                 *
*                                                               *
* Attributes - N/A                                              *
*****************************************************************

  field-symbols: &lt;lfs_subject&gt; type gy_s_subject.

  clear: r_subject.

  read table me-&gt;gt_subject &quot;hashed table - BINARY SEARCH not appropriate
    with table key notif_status = i_notif_status
    assigning &lt;lfs_subject&gt;.

  if sy-subrc = 0.
    r_subject = &lt;lfs_subject&gt;-email_sub.
  endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_NEXT_STATUS" VERSION="1" LANGU="E" DESCRIPT="Return the next status given current status and age" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_NEXT_STATUS" SCONAME="I_AGE" VERSION="1" LANGU="E" DESCRIPT="PC: Age in days" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZPCDAYSAGE"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_NEXT_STATUS" SCONAME="I_CURRENT" VERSION="1" LANGU="E" DESCRIPT="PC: Notification Status" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZPCNOTIFSID"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_NEXT_STATUS" SCONAME="R_NEXT" VERSION="1" LANGU="E" DESCRIPT="PC: Notification Status" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZPCNOTIFSID"/>
   <source>method get_next_status.
********* Basic documentation of ABAP****************************
* Date: 12-JUN-16                                               *
* Programmer: Stuart Bell (SB282791)                            *
* Program Specification: DS [R21] P2P_R_018                     *
* Source Code Review: SCRR [R21] P2P_R_018                      *
*                                                               *
* Transport No. : RBDK951514                                    *
*                                                               *
* Description of ABAP’s function: Return the notification to    *
* set as the next notification status of a tranasaction. If the *
* return is blank, no change is made and no email is sent       *
* because of this transaction.                                  *
*                                                               *
* Attributes - N/A                                              *
*****************************************************************

  data: lv_index          type syst_tabix.

  field-symbols: &lt;lfs_notif&gt; type zpcnotifstatus.

  clear: r_next.

* look up current status
  read table gt_s_notif_status &quot; sort order by age must be preserved - do not use BINARY SEARCH
    with key notif_status = i_current
    transporting no fields.

  if sy-subrc &lt;&gt; 0.
*   if not found in table, take the first status
    lv_index = 1.
  else.
*   else if found, start from the current status index
    lv_index = sy-tabix.
  endif.

  loop at gt_s_notif_status from lv_index assigning &lt;lfs_notif&gt;
    where age &lt;= i_age.
*    Loop sets the &lt;lfs_notif&gt; to the highest possible notification status for this age
  endloop.

  if &lt;lfs_notif&gt; is assigned.
    if i_current &lt;&gt; &lt;lfs_notif&gt;-notif_status.
*     If we have a possible notification status and it differs from the original or is the last entry
      r_next = &lt;lfs_notif&gt;-notif_status.

    elseif lv_index = lines( gt_notif_status ).
*     However, if we are the last status, we need to return the same status again to trigger the email
      r_next = i_current.
    endif.
  endif.

endmethod.</source>
  </method>
  <method CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_RECIPIENT" VERSION="1" LANGU="E" DESCRIPT="Return a specific recipient from a card" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_RECIPIENT" SCONAME="I_FIELD" VERSION="1" LANGU="E" DESCRIPT="PC: Email Recipient Code" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZPCRECIPIENT"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_RECIPIENT" SCONAME="I_CARD" VERSION="1" LANGU="E" DESCRIPT="Procurement Card Holder Master Data Table" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZPCCARD"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="GET_RECIPIENT" SCONAME="R_USER" VERSION="1" LANGU="E" DESCRIPT="PC: User Name" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZPCUSER"/>
   <source>method get_recipient.
********* Basic documentation of ABAP****************************
* Date: 12-JUN-16                                               *
* Programmer: Stuart Bell (SB282791)                            *
* Program Specification: DS [R21] P2P_R_018                     *
* Source Code Review: SCRR [R21] P2P_R_018                      *
*                                                               *
* Transport No. : RBDK951514, RBDK954953                        *
*                                                               *
* Description of ABAP’s function: Utility method to return the  *
* specified value (I_FIELD) of the card information. This is a  *
* field used to determine who to send the email to (based on    *
* configuration).                                               *
*                                                               *
* Attributes - N/A                                              *
*****************************************************************

  clear: r_user.

* Get user based on recipient type and card details
  case i_field.
    when gc_recipient_owner.
*     Get the card&apos;s owner
      r_user = i_card-owner.

    when gc_recipient_deleg.
*     Get the card&apos;s delegate
      r_user = i_card-delegate.

    when gc_recipient_coder.
*     Get the person responsible for coding the card
      if i_card-delegate is not initial.
*       If there is a delegate, use that
        r_user = i_card-delegate.
      else.
*       If there is no delegate, take the owner
        r_user = i_card-owner.
      endif.

    when gc_recipient_aprvr.
*     Get the card&apos;s approver
      r_user = i_card-approver.

      if r_user is initial.
*       If no override approver is maintained, grab from HR
        r_user = zcl_pc_card_api=&gt;get_approver_for_card_hr( i_card-owner ).
      endif.

    when others.
*     No logic implemented for this recipient type.
*     - ZPCRECIPIENT is a fixed value domain so will be one of the above values.
  endcase.

endmethod.</source>
  </method>
  <method CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="OBJECT_FOR_GROUP" VERSION="1" LANGU="E" DESCRIPT="Create a notification group object for a particular use" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="OBJECT_FOR_GROUP" SCONAME="I_GROUP" VERSION="1" LANGU="E" DESCRIPT="PC: Notification Group" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZPCNOTIFGRP"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="OBJECT_FOR_GROUP" SCONAME="I_LOG" VERSION="1" LANGU="E" DESCRIPT="PC: Message logging" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_PC_MESSAGES"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="OBJECT_FOR_GROUP" SCONAME="I_LANGUAGE" VERSION="1" LANGU="E" DESCRIPT="Language Key" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYLANGU" PARVALUE="SY-LANGU"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="OBJECT_FOR_GROUP" SCONAME="R_GROUP" VERSION="1" LANGU="E" DESCRIPT="PC: Notifications" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_PC_NOTIF_GROUP"/>
   <source>method object_for_group.
********* Basic documentation of ABAP****************************
* Date: 12-JUN-16                                               *
* Programmer: Stuart Bell (SB282791)                            *
* Program Specification: DS [R21] P2P_R_018                     *
* Source Code Review: SCRR [R21] P2P_R_018                      *
*                                                               *
* Transport No. : RBDK951514, RBDK954953                        *
*                                                               *
* Description of ABAP’s function: Return an instance of this    *
* class correctly configured with database data.                *
*                                                               *
* Attributes - N/A                                              *
*****************************************************************

  data: lt_status          type zpcnotifstatus_th,
        lt_subject         type gy_t_subject,
        lr_status_range    type zcl_pc_notif_group=&gt;gy_r_status,
        lv_comparison_date type string.

**********************************************************************
* Select Configuration from DB
**********************************************************************

* read notification statuses for the current action status
  select @space,
         @i_group,
         notif_status,
         age,
         emailid,
         to_a,
         to_b,
         to_c,
         cc_a,
         cc_b,
         cc_c
    from zpcnotifstatus
    into table @lt_status
         where notif_group = @i_group.

  if sy-subrc &lt;&gt; 0.
*   Log warning - no notification rules for group xxxx
    if 1 = 2. message w108(zpc) with gc_zpcnotifstatus i_group space. endif. &quot; enables where-used functionality in SE91
    i_log-&gt;add( i_num  = 108
                i_type = zcl_pc_messages=&gt;gc_msg_type_w
                i_v1   = gc_zpcnotifstatus
                i_v2   = i_group
                i_v3   = space ).

  endif.

* read the notification status email subjects
  select notif_status,
         email_sub
    from zpcnotifsub
    into table @lt_subject
         where notif_group = @i_group
           and language    = @i_language.

  if sy-subrc &lt;&gt; 0.
*   Log warning - no notification email subjects for group xxxx
    if 1 = 2. message w108(zpc) with gc_zpcnotifsub i_group i_language. endif. &quot; enables where-used functionality in SE91
    i_log-&gt;add( i_num  = 108
                i_type = zcl_pc_messages=&gt;gc_msg_type_w
                i_v1   = gc_zpcnotifsub
                i_v2   = i_group
                i_v3   = i_language ).
  endif.


*****************************************************************************
* Special logic for notification groups for approval and coding
*****************************************************************************

  case i_group.
*   Transactions to Approve
    when gc_notifgrp_apvr.
*     Status range for approvers
      lr_status_range = zcl_pc_trans_api=&gt;gs_t_status_appvr.

*     Set key date
      lv_comparison_date = gc_key_date_apvr.

*   Transactions to Code
    when gc_notifgrp_codr.
*     Status range for coders
      lr_status_range = zcl_pc_trans_api=&gt;gs_t_status_coder.

*     Set key date (Load date)
      lv_comparison_date = gc_key_date_codr.
    when others.
*     if the notif group isn&apos;t for transactions, we don&apos;t need a status range
      clear: lv_comparison_date, lr_status_range.
  endcase.


**********************************************************************
* Create return object
**********************************************************************

* Create the object
  create object r_group
    exporting
      i_msg             = i_log
      i_t_notif_status  = lt_status
      i_t_subject       = lt_subject
      i_t_apprv_status  = lr_status_range
      i_comparison_date = lv_comparison_date.

endmethod.</source>
  </method>
  <method CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="PREPARE_CARD_EMAIL" VERSION="1" LANGU="E" DESCRIPT="Create an email object for a card and status" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDBY="OJR52122" CHANGEDON="20160519" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="PREPARE_CARD_EMAIL" SCONAME="I_CARD" VERSION="1" LANGU="E" DESCRIPT="Procurement Card Holder Master Data Table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZPCCARD"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="PREPARE_CARD_EMAIL" SCONAME="I_NOTIF_STATUS" VERSION="1" LANGU="E" DESCRIPT="PC: Notification Status" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZPCNOTIFSID" PARVALUE="SPACE"/>
   <parameter CLSNAME="ZCL_PC_NOTIF_GROUP" CMPNAME="PREPARE_CARD_EMAIL" SCONAME="R_EMAIL" VERSION="1" LANGU="E" DESCRIPT="PC: Email Send API" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="OJR52122" CREATEDON="20160519" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_PC_EMAIL_API"/>
   <source>method prepare_card_email.
********* Basic documentation of ABAP****************************
* Date: 12-JUN-16                                               *
* Programmer: Stuart Bell (SB282791)                            *
* Program Specification: DS [R21] P2P_R_018                     *
* Source Code Review: SCRR [R21] P2P_R_018                      *
*                                                               *
* Transport No. : RBDK951514, RBDK954953                        *
*                                                               *
* Description of ABAP’s function: Prepare an email object -     *
* ZCL_PC_EMAIL_API - based on the configuration of the email    *
* notification status and return to the caller.                 *
*                                                               *
* Attributes - N/A                                              *
*****************************************************************

  data: lr_template type ref to zcl_pc_mstch_tmpl,
        lv_user     type zpcuser,
        lt_user     type zpcuser_t,
        lv_ok_to    type boolean,
        lv_ok_cc    type boolean,
        lwa_card_gw type zpccard_gw.

  field-symbols: &lt;lfs_notifstatus&gt; type zpcnotifstatus.

* Initialise the returning object
  clear: r_email.

*********************************************************************
* prepare email for each card
*********************************************************************

* get notif status details
  read table gt_notif_status &quot;hashed table - BINARY SEARCH not appropriate
    with table key notif_status = i_notif_status
    assigning &lt;lfs_notifstatus&gt;.

  if sy-subrc &lt;&gt; 0.
    gr_msg-&gt;add( i_num  = 108
                 i_type = zcl_pc_messages=&gt;gc_msg_type_w
                 i_v1   = gc_zpcnotifstatus
                 i_v2   = i_notif_status ).
    if 1 = 2. message e108(zpc) with gc_zpcnotifstatus i_notif_status space. endif. &quot; enables where-used functionality in SE91
    return.
  endif.

* initialise email object
  create object r_email.

**********************************************************************
* Prepare a table of recipients for us to process

* To:
  lv_user = get_recipient( i_field = &lt;lfs_notifstatus&gt;-to_a
                           i_card  = i_card ).
  insert lv_user into table lt_user.

  lv_user = get_recipient( i_field = &lt;lfs_notifstatus&gt;-to_b
                           i_card  = i_card ).
  insert lv_user into table lt_user.

  lv_user = get_recipient( i_field = &lt;lfs_notifstatus&gt;-to_c
                           i_card  = i_card ).
  insert lv_user into table lt_user.

  lv_ok_to = r_email-&gt;add_receipients( i_log    = gr_msg
                                       i_t_user = lt_user ).
  clear: lt_user.

* CC:
  lv_user = get_recipient( i_field = &lt;lfs_notifstatus&gt;-cc_a
                           i_card  = i_card ).
  insert lv_user into table lt_user.

  lv_user = get_recipient( i_field = &lt;lfs_notifstatus&gt;-cc_b
                           i_card  = i_card ).
  insert lv_user into table lt_user.

  lv_user = get_recipient( i_field = &lt;lfs_notifstatus&gt;-cc_c
                           i_card  = i_card ).
  insert lv_user into table lt_user.

  lv_ok_cc = r_email-&gt;add_receipients( i_log    = gr_msg
                                       i_t_user = lt_user
                                       i_copy   = abap_true ).
  clear: lt_user.

  if lv_ok_to = abap_false or lv_ok_cc = abap_false.
*   If we had an error in either to or cc email address determination, fail this email
    clear: r_email.
    return.
  endif.

**********************************************************************
* Email subject depends on card and notif status
  r_email-&gt;gv_subject = me-&gt;get_email_subject( i_notif_status ).

**********************************************************************
* Construct Template

* look up so10 text
  lr_template = zcl_pc_mstch_tmpl=&gt;get_template_so10( i_log      = gr_msg
                                                      i_textname = &lt;lfs_notifstatus&gt;-emailid ).

**********************************************************************
* merge details into body

* URL
  lr_template-&gt;merge_values( zcl_pc_email_api=&gt;gs_app_url ).

* Card
  move-corresponding i_card to lwa_card_gw.
  zcl_pc_card_api=&gt;enhance_card( changing h_card = lwa_card_gw ).
  lr_template-&gt;merge_values( lwa_card_gw ).

* Notif details
  lr_template-&gt;merge_values( &lt;lfs_notifstatus&gt; ).

* Save body to email
  r_email-&gt;gv_body = lr_template-&gt;gv_content.

endmethod.</source>
  </method>
 </CLAS>
 <PROG NAME="ZPCERPREP0004TOP" VARCL="X" SUBC="I" CNAM="OJR52122" CDAT="20160526" UNAM="OJR52122" UDAT="20160620" VERN="000048" RSTAT="K" RMAND="600" RLOAD="E" SDATE="20160620" STIME="130603" IDATE="20160620" ITIME="130603" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Include ZPCERPREP0004TOP" LENGTH="24 "/>
   </language>
  </textPool>
  <source>*****************************************************************
* Include name: ZPCERPREP0004TOP                                *
* Include Description: Data declaration and selection           *
*                      parameters for transaction ZPCCRPT.      *
* Created By(Main Program): ZPCERPREP0004                       *
*****************************************************************
report zpcerprep0004.

constants: gc_tcode       type tcode       value &apos;ZPCCRPT&apos;,
           gc_bukrs_str   type c length  5 value &apos;BUKRS&apos;,
           gc_authobj_str type c length 10 value &apos;ZPC_REPORT&apos;.

data: gr_alv      type ref to cl_salv_table,
      gr_report   type ref to zcl_pc_report_controls,
      gt_controls type zcl_pc_report_controls=&gt;gy_t_controls.

tables: zpctransacth, zpcworkitem_v.

selection-screen begin of block finance with frame title text-001.
select-options o_comp   for zpctransacth-comp_code obligatory no intervals.
select-options o_notif  for zpctransacth-notif_status.
selection-screen end of block finance.

selection-screen begin of block pcard with frame title text-002.
select-options o_owner  for zpcworkitem_v-owner.
select-options o_prov   for zpcworkitem_v-provider.
select-options o_del    for zpcworkitem_v-delegate.
select-options o_appr   for zpcworkitem_v-approver.
selection-screen end of block pcard.

selection-screen begin of block posting with frame title text-003.
select-options o_subd   for zpctransacth-subm_date.
select-options o_postd  for zpctransacth-post_date.
select-options o_status for zpctransacth-status.
select-options o_docd   for zpctransacth-doc_date.
select-options o_loadd  for zpctransacth-load_date.
selection-screen end of block posting.</source>
 </PROG>
 <DOMA DOMNAME="ZPCRECIPIENT" DDLANGUAGE="E" DATATYPE="CHAR" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" VALEXI="X" MASKLEN="0000" DDTEXT="Email Recipient Code" AUTHCLASS="00" AS4USER="OJR52122" AS4DATE="20160612" AS4TIME="005442" OUTPUTSTYLE="00">
  <dd07v DOMNAME="ZPCRECIPIENT" VALPOS="0001" DDLANGUAGE="E" DOMVALUE_L="OWNER" DDTEXT="Card Owner"/>
  <dd07v DOMNAME="ZPCRECIPIENT" VALPOS="0002" DDLANGUAGE="E" DOMVALUE_L="DELEG" DDTEXT="Card Delegate"/>
  <dd07v DOMNAME="ZPCRECIPIENT" VALPOS="0003" DDLANGUAGE="E" DOMVALUE_L="APRVR" DDTEXT="Card Approver"/>
  <dd07v DOMNAME="ZPCRECIPIENT" VALPOS="0004" DDLANGUAGE="E" DOMVALUE_L="CODER" DDTEXT="Person responsible for coding card (Delegate then Owner)"/>
 </DOMA>
 <PROG NAME="ZPCERPREP0001TOP" VARCL="X" SUBC="I" CNAM="OJR52122" CDAT="20160518" UNAM="OJR52122" UDAT="20160615" VERN="000025" RMAND="600" RLOAD="E" SDATE="20160615" STIME="101247" IDATE="20160615" ITIME="101247" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Include ZPCERPREP0001TOP" LENGTH="24 "/>
   </language>
  </textPool>
  <source>*****************************************************************
* Include name: ZPCERPREP0001TOP                                *
* Include Description: Data declaration and selection           *
*                      parameters for transaction ZPCARD.       *
* Created By(Main Program): ZPCERPREP0001                       *
*****************************************************************
report zpcerprep0001.
include zpcerprep0001l01.

constants: gc_tcode type tcode value &apos;ZPCARD&apos;.

data: gr_program type ref to lcl_zpctransload,
      gv_mode    type zpcloadtype.

* File Type
selection-screen begin of block ftype with frame title text-001.

selection-screen begin of line.
parameters: p_trans type xfeld radiobutton group typ.
selection-screen comment (35) for field p_trans.
parameters: p_card  type xfeld radiobutton group typ default &apos;X&apos;. &quot; Default must be hardcoded to &apos;X&apos;
selection-screen comment (35) for field p_card.
selection-screen end of line.

selection-screen end of block ftype.


* Select File
selection-screen begin of block file with frame title text-002.

selection-screen begin of line.
selection-screen comment (25) for field p_file.
parameters: p_file type string visible length 50 obligatory.
selection-screen end of line.

selection-screen end of block file.


* File Options
selection-screen begin of block foptions with frame title text-003.

selection-screen begin of line.
selection-screen comment (25) for field p_prov.
parameters: p_prov type zpcproviderid as listbox visible length 50 obligatory.
selection-screen end of line.

selection-screen begin of line.
selection-screen comment (25) for field p_format.
parameters: p_format type zpcformatid as listbox visible length 50 obligatory.
selection-screen end of line.

selection-screen end of block foptions.


* Posting Options
selection-screen begin of block poptions with frame title text-004.

selection-screen begin of line.
parameters: p_test  type xfeld as checkbox default &apos;X&apos;. &quot; Default must be hardcoded to &apos;X&apos;
selection-screen comment (35) for field p_test.
selection-screen end of line.

selection-screen end of block poptions.</source>
 </PROG>
</nugget >
